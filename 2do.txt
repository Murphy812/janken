итак, что я хочу, что я хочу:

- реализовать бой. для этого надо:
  - форму отправки знака
  - обработку знака:
     - проверка, что в battles не больше 2 записей, где ты уке - иначе отлуп "такой-то не принимает вызов"
     - ищем в battles незаконченный бой с этим противником, где ты уке. Если его нет, то открываем бой:
       - определяем max(+1) ид боя. определяем количество хитов противников и взвешиваем их
       - фиксация для обоих противников количества ударов, которые они могут пропустить
         - делим большее на меньшее. дробную часть с такой же вероятностью переводим в +1.
           то есть для 3 и 8, уке выдержит всегда 1, а наге или 2 (в 33% процентах случаев), или 3 (66%)
     - генерация знака противника
     - расчет и запись результата (кто выиграл раунд, , не кончился ли бой), 
       "Я покачнулся, но сумею выдержать еще X ударов/Пропустите еще Z ударов - и я одержу победу"/"Благодарю за поединок"
     - отправка результата раунда/боя


- заставить функции отдавать json - json_encode
- сделать флаг интеллектуала и доступные по нему функции - создание предметов на рецензию (ввести название и "создать")
- сделать флаг шутов и доступные по нему функции - смена статусов другим юзерам (выбрать игрока, ввести статус и "установить")
- сделать флаг королей и функции для него - установка ставок на результаты каких-то боев
- сделать флаг белых ворон и для него - ввод номера чужого бейджа иногда что-то дает


- навернуть сверху какой-то красивенький html-фреймворк (boilerplat, например)


Думаю о том, чтобы применить в gui какой-то ajax - чтобы:
 а) не перегружать страницу целиком, а только запрошенные данные
 б) в фоновом режиме считывать обновления
обычный вариант - это клиент периодически спрашивает у сервера, есть ли чё. Нам интересны относительно даты, указываемой в запросе, есть ли:
 - новые сообщения (изменения статусов шутами расходится всем как сообщения)
 - новые подарки
s
